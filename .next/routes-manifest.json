{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/influencers/[name]",
      "regex": "^/influencers/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPname": "nxtPname"
      },
      "namedRegex": "^/influencers/(?<nxtPname>[^/]+?)(?:/)?$"
    },
    {
      "page": "/stacks/[id]",
      "regex": "^/stacks/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/stacks/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/account",
      "regex": "^/account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/account(?:/)?$"
    },
    {
      "page": "/auth/callback",
      "regex": "^/auth/callback(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/callback(?:/)?$"
    },
    {
      "page": "/auth/reset-password",
      "regex": "^/auth/reset\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/reset\\-password(?:/)?$"
    },
    {
      "page": "/callback",
      "regex": "^/callback(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/callback(?:/)?$"
    },
    {
      "page": "/cart",
      "regex": "^/cart(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/cart(?:/)?$"
    },
    {
      "page": "/forgot-password",
      "regex": "^/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot\\-password(?:/)?$"
    },
    {
      "page": "/influencers",
      "regex": "^/influencers(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/influencers(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/purchase",
      "regex": "^/purchase(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/purchase(?:/)?$"
    },
    {
      "page": "/purchase/checkout",
      "regex": "^/purchase/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/purchase/checkout(?:/)?$"
    },
    {
      "page": "/purchase/success",
      "regex": "^/purchase/success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/purchase/success(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    },
    {
      "page": "/stacks",
      "regex": "^/stacks(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/stacks(?:/)?$"
    },
    {
      "page": "/waitlist",
      "regex": "^/waitlist(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/waitlist(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}